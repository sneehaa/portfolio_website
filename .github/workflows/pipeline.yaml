
name: "Deploy to Server"

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SERVER_IP: ${{ vars.SERVER_IP }}

    

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: "Build Docker Image"
        run: |
          docker login -u snehaa123 -p $DOCKERHUB_PAT
          docker build -t snehaa123/portfolio_website .
          docker push snehaa123/portfolio_website
        env:
          DOCKERHUB_PAT: ${{ secrets.DOCKERHUB_PAT }}

      - name: "Configure SSH"
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      
      - name: "Put SSH Key in Docker file for Server Access"
        run: |
          touch pem.pem
          echo $SSH_KEY64 | base64 -d > pem.pem && chmod 400 pem.pem
          ssh-keygen -R $SERVER_IP
        env: 
          SSH_KEY64: ${{ secrets.SSH_KEY64 }}

      - name: "Docker Pull and Restart Docker"
        run: |
          ssh -t ubuntu@$SERVER_IP -i pem.pem 'docker pull snehaa123/portfolio_website'
          ssh -t ubuntu@$SERVER_IP -i pem.pem 'docker stop portfolio_website && docker rm portfolio_website'
          ssh -t ubuntu@$SERVER_IP -i pem.pem 'docker run --name portfolio_website -p 80:80 -d snehaa123/portfolio_website'